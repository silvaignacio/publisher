/**
 * API Gateway
 * API Gateway
 *
 * The version of the OpenAPI document: 1.0
 * Contact: checkout@deuna.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ApiGateway);
  }
}(this, function(expect, ApiGateway) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ApiGateway.ExternalMerchantAPIApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ExternalMerchantAPIApi', function() {
    describe('merchantsExternalOrdersOrderTokenCouponsCouponCodeDelete', function() {
      it('should call merchantsExternalOrdersOrderTokenCouponsCouponCodeDelete successfully', function(done) {
        //uncomment below and update the code to test merchantsExternalOrdersOrderTokenCouponsCouponCodeDelete
        //instance.merchantsExternalOrdersOrderTokenCouponsCouponCodeDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('merchantsExternalOrdersOrderTokenCouponsPost', function() {
      it('should call merchantsExternalOrdersOrderTokenCouponsPost successfully', function(done) {
        //uncomment below and update the code to test merchantsExternalOrdersOrderTokenCouponsPost
        //instance.merchantsExternalOrdersOrderTokenCouponsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('merchantsExternalOrdersOrderTokenGiftCardsPost', function() {
      it('should call merchantsExternalOrdersOrderTokenGiftCardsPost successfully', function(done) {
        //uncomment below and update the code to test merchantsExternalOrdersOrderTokenGiftCardsPost
        //instance.merchantsExternalOrdersOrderTokenGiftCardsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('merchantsExternalOrdersOrderTokenShippingMethodsCodePatch', function() {
      it('should call merchantsExternalOrdersOrderTokenShippingMethodsCodePatch successfully', function(done) {
        //uncomment below and update the code to test merchantsExternalOrdersOrderTokenShippingMethodsCodePatch
        //instance.merchantsExternalOrdersOrderTokenShippingMethodsCodePatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('merchantsExternalOrdersOrderTokenShippingMethodsPost', function() {
      it('should call merchantsExternalOrdersOrderTokenShippingMethodsPost successfully', function(done) {
        //uncomment below and update the code to test merchantsExternalOrdersOrderTokenShippingMethodsPost
        //instance.merchantsExternalOrdersOrderTokenShippingMethodsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('merchantsExternalOrdersOrderTokenShippingRatePost', function() {
      it('should call merchantsExternalOrdersOrderTokenShippingRatePost successfully', function(done) {
        //uncomment below and update the code to test merchantsExternalOrdersOrderTokenShippingRatePost
        //instance.merchantsExternalOrdersOrderTokenShippingRatePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('merchantsOrdersOrderTokenGet', function() {
      it('should call merchantsOrdersOrderTokenGet successfully', function(done) {
        //uncomment below and update the code to test merchantsOrdersOrderTokenGet
        //instance.merchantsOrdersOrderTokenGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('merchantsOrdersOrderTokenPaymentsMethodsGet', function() {
      it('should call merchantsOrdersOrderTokenPaymentsMethodsGet successfully', function(done) {
        //uncomment below and update the code to test merchantsOrdersOrderTokenPaymentsMethodsGet
        //instance.merchantsOrdersOrderTokenPaymentsMethodsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('merchantsOrdersOrderTokenTransactionsVerifyPost', function() {
      it('should call merchantsOrdersOrderTokenTransactionsVerifyPost successfully', function(done) {
        //uncomment below and update the code to test merchantsOrdersOrderTokenTransactionsVerifyPost
        //instance.merchantsOrdersOrderTokenTransactionsVerifyPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('merchantsOrdersPost', function() {
      it('should call merchantsOrdersPost successfully', function(done) {
        //uncomment below and update the code to test merchantsOrdersPost
        //instance.merchantsOrdersPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('merchantsTransactionsPurchasePost', function() {
      it('should call merchantsTransactionsPurchasePost successfully', function(done) {
        //uncomment below and update the code to test merchantsTransactionsPurchasePost
        //instance.merchantsTransactionsPurchasePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
